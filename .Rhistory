mutate(
GHG_MMT = DIST_refrigerationGHG * MMT/DIST_USreeferTotal_MMT,
# GHG_MMT = MMT*DIST_truckPayload*(8*.7+3*.3) * .5 * 1430/1000000000, # convert to lbs divide by truck capacity convert to MMT of refrigerant
#GHG estimate 70% use highest value (8), 30% use lowest (3) from fugitive emissions https://www.epa.gov/sites/production/files/2015-07/documents/fugitiveemissions.pdf
Source = "Truck Refrig.",
Fuel = "Refrigerant",
Stage = "Distribution (F-M)"
)
DIST_railFM_fugGHG <- DIST_railFM_ton %>% filter(State_Abb != "DC") %>%
pivot_longer(!c(State_Abb), names_to = "commodity_naics", values_to = "MMT")  %>%
mutate(
GHG_MMT = DIST_refrigerationGHG * MMT/DIST_USreeferTotal_MMT,
# GHG_MMT = ((MMT*(1000000*2205)) / (30*2000))* 8 * .5 *  1430/1000000000,  # convert mass to lbs divide by rail capacity convert to MMT of refrigerant
# https://www.wett.ru/es/helpful_information/rail_transport/
# estimate top of range. from fugitive emissions https://www.epa.gov/sites/production/files/2015-07/documents/fugitiveemissions.pdf
Source = "Rail Refrig.",
Fuel = "Refrigerant",
Stage = "Distribution (F-M)"
)
suppressMessages({
DIST_manuf_WR_ton <- read_excel_allsheets("Data/Dist - food manufactured by state - ton.xlsx")
DIST_truckMWR_ton <-
rbind(
DIST_manuf_WR_ton[["ship by truck Dairy"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "Dairy") ,
DIST_manuf_WR_ton[["ship by truck Dairy"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "Dairy"),
DIST_manuf_WR_ton[["ship by truck Fruit and Vege"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "Fruit_veg") ,
DIST_manuf_WR_ton[["ship by truck Fruit and Vege"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "Fruit_veg"),
DIST_manuf_WR_ton[["ship by truck M&P"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "animalProducts") ,
DIST_manuf_WR_ton[["ship by truck M&P"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "animalProducts"),
DIST_manuf_WR_ton[["ship by truck Seafood"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "Seafood") ,
DIST_manuf_WR_ton[["ship by truck Seafood"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "Seafood")
) %>%
group_by(State_Abb, commodity) %>% summarise(tonmile = sum(tonmile, na.rm = TRUE)/2) %>% pivot_wider(names_from = commodity, values_from = tonmile)
DIST_railMWR_ton <-
rbind(
DIST_manuf_WR_ton[["ship by rail Dairy"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "Dairy") ,
DIST_manuf_WR_ton[["ship by rail Dairy"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "Dairy"),
DIST_manuf_WR_ton[["ship by rail Fruit and Vege"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "Fruit_veg") ,
DIST_manuf_WR_ton[["ship by rail Fruit and Vege"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "Fruit_veg"),
DIST_manuf_WR_ton[["ship by rail M&P"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "animalProducts") ,
DIST_manuf_WR_ton[["ship by rail M&P"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "animalProducts"),
DIST_manuf_WR_ton[["ship by rail Seafood"]] %>% dplyr::rename(State_Abb = "...1") %>% pivot_longer(!State_Abb, names_to = "State_alt", values_to = "tonmile") %>% mutate(commodity = "Seafood") ,
DIST_manuf_WR_ton[["ship by rail Seafood"]] %>% dplyr::rename(State_alt = "...1") %>% pivot_longer(!State_alt, names_to = "State_Abb", values_to = "tonmile") %>% mutate(commodity = "Seafood")
) %>%
group_by(State_Abb, commodity) %>% summarise(tonmile = sum(tonmile, na.rm = TRUE)/2) %>% pivot_wider(names_from = commodity, values_from = tonmile)
})
DIST_truckMWR_fugGHG <- DIST_truckMWR_ton %>% filter(State_Abb != "DC") %>%
pivot_longer(!c(State_Abb), names_to = "commodity_naics", values_to = "MMT")    %>%
mutate(
GHG_MMT = DIST_refrigerationGHG * MMT/DIST_USreeferTotal_MMT,
Source = "Truck Refrig.",
Fuel = "Refrigerant",
Stage = "Distribution"
)
DIST_railMWR_fugGHG <- DIST_railMWR_ton %>% filter(State_Abb != "DC") %>%
pivot_longer(!c(State_Abb), names_to = "commodity_naics", values_to = "MMT")  %>%
mutate(
GHG_MMT = DIST_refrigerationGHG * MMT/DIST_USreeferTotal_MMT,
Source = "Rail Refrig.",
Fuel = "Refrigerant",
Stage = "Distribution"
)
DIST_Fug_GHG <- rbind(DIST_truckFM_fugGHG, DIST_railFM_fugGHG, DIST_truckMWR_fugGHG, DIST_railMWR_fugGHG) %>%
left_join(select(BD_stateRegion, State_Abb, stateName), by = "State_Abb")
DIST_Fug_GHG$commodity_naics <- revalue(DIST_Fug_GHG$commodity_naics, c( "Dairy" = "Dairy"
,	"Fruit_veg" = "Fruit, Vegetables, Nuts"
, "animalProducts" = "Meat, Poultry, Eggs"
, "Seafood" = "Seafood"  ))
F_DIST_GHG <- DIST_Energy_GHG %>% rbind(select(DIST_Fug_GHG, -MMT))
}
# Remove excess variables from environment
rm(list=ls(pattern="^DIST"))
# End of Supply Chain ----
{
# Warehouse  ----
#CBECS Microdata - reduced number of columns
# https://www.eia.gov/consumption/commercial/data/2012/index.php?view=microdata
EOSC_Commercial <- read_excel("Data/End of Chain - Warehouse USDA-NASS, Retail + Consumption BEA.xlsx", sheet = "CBECS_Reduced")
EOSC_Commercial$CENDIV <-recode_factor(EOSC_Commercial$CENDIV
,'1' = 'New England'
,'2' = 'Middle Atlantic'
,'3' = 'East North Central'
,'4' = 'West North Central'
,'5' = 'South Atlantic'
,'6' = 'East South Central'
,'7' = 'West South Central'
,'8' = 'Mountain'
,'9' = 'Pacific'
)
EOSC_WR_Warehouse <- EOSC_Commercial %>% filter(PBAPLUS == 10 | PBAPLUS == 20) %>% select(REGION, CENDIV, PBA, PBAPLUS, SQFT, ELBTU, NGBTU, FKBTU )
EOSC_WR_Warehouse$PBAPLUS <-recode_factor(EOSC_WR_Warehouse$PBAPLUS
, "10" = "Dry"
, "20" = "Cold")
EOSC_WR_Warehouse <-EOSC_WR_Warehouse %>% mutate(
Electricity = (ELBTU/1000)/SQFT # was in thousand BTU, now MMBTU/sqft
, naturalGas = (NGBTU/1000)/SQFT # was in thousand BTU, now MMBTU/sqft
, fuelOil = (FKBTU/1000)/SQFT # was in thousand BTU, now MMBTU/sqft
)
EOSC_WR_Warehouse <-EOSC_WR_Warehouse %>% select(CENDIV, PBAPLUS, Electricity, naturalGas, fuelOil) %>% pivot_longer(!c(CENDIV, PBAPLUS), names_to = "Fuel", values_to = "EI")
EOSC_WR_Warehouse$EI <- EOSC_WR_Warehouse$EI %>% replace_na(0)
EOSC_WR_WarehouseEI <- aggregate(EI ~ CENDIV + PBAPLUS + Fuel, EOSC_WR_Warehouse,FUN = mean, na.rm = TRUE) %>% dplyr::rename("Region" = CENDIV, "Type" = PBAPLUS)
# replaced NA with 0 so warehouses that do not use any fuel DO reduce the average EI
EOSC_WR_WarehouseEI <- EOSC_WR_WarehouseEI %>% left_join(select(BD_stateRegion, stateName, Region), by = "Region")
# Data from: https://www.cbre.us/research-and-reports/US-Food-in-Demand-Series-Cold-Storage-Logistics-Unpacked-May-2019
EOSC_WR_warehouseHeight <- (3.6 * 1000000000) / (214 * 1000000) # U.S. cubic feet / U.S. sqft
# Data from: USDA-NASS cold storage survey
EOSC_WR_Warehouse_cuft <- read_excel("Data/End of Chain - Warehouse USDA-NASS, Retail + Consumption BEA.xlsx",  sheet = "USDA-NASS - Cold Storage cuft") %>%
select(State, `Data Item`, Value) %>%
mutate(`Data Item` = recode_factor(`Data Item`,
"COLD STORAGE CAPACITY, WAREHOUSE, GENERAL, GROSS - CAPACITY, MEASURED IN CU FT" = "Total_cuft"
, "COLD STORAGE CAPACITY, WAREHOUSE, GENERAL, GROSS, PRIVATE & SEMI-PRIVATE - CAPACITY, MEASURED IN CU FT" = "Private_cuft"
, "COLD STORAGE CAPACITY, WAREHOUSE, GENERAL, GROSS, PUBLIC - CAPACITY, MEASURED IN CU FT" = "Public_cuft"
)) %>%
pivot_wider(names_from = "Data Item", values_from = "Value")
EOSC_WR_Warehouse_count <- read_excel("Data/End of Chain - Warehouse USDA-NASS, Retail + Consumption BEA.xlsx",  sheet = "USDA-NASS - Cold Storage count")%>%
select(State, `Data Item`, Value) %>%
mutate(`Data Item` = recode_factor(`Data Item`,
"COLD STORAGE CAPACITY, WAREHOUSE, GENERAL - NUMBER OF WAREHOUSES" = "Total_n"
, "COLD STORAGE CAPACITY, WAREHOUSE, GENERAL, PRIVATE & SEMI-PRIVATE - NUMBER OF WAREHOUSES" = "Private_n"
, "COLD STORAGE CAPACITY, WAREHOUSE, GENERAL, PUBLIC - NUMBER OF WAREHOUSES" = "Public_n"
)) %>%
pivot_wider(names_from = "Data Item", values_from = "Value")
EOSC_WR_Warehouse_count <- EOSC_WR_Warehouse_count%>%
rbind(data.frame(State = "US TOTAL", Total_n = sum(EOSC_WR_Warehouse_count$Total_n),
Private_n = sum(EOSC_WR_Warehouse_count$Private_n),  Public_n = sum(EOSC_WR_Warehouse_count$Public_n)))
EOSC_WR_Warehouse_cuft <- left_join(EOSC_WR_Warehouse_cuft, EOSC_WR_Warehouse_count, by = "State")
EOSC_WR_Warehouse_cuft_TOTALremainder <-  as.double(unname(unlist(filter(EOSC_WR_Warehouse_cuft,State == "US TOTAL")$Total_cuft))) -
sum(as.double(filter(EOSC_WR_Warehouse_cuft,Total_cuft != "(D)" & State != "US TOTAL")$Total_cuft))
EOSC_WR_Warehouse_cuftD1 <- EOSC_WR_Warehouse_cuft %>% filter(Total_cuft == "(D)") %>%
mutate(Total_cuft = EOSC_WR_Warehouse_cuft_TOTALremainder * Total_n / sum(Total_n) ,
Private_cuft = ifelse(Private_cuft == "0", 0,
ifelse(Public_cuft == "0", Total_cuft,
Total_cuft * Private_n / Total_n)) ,
Public_cuft = ifelse(Public_cuft == "0", 0,
ifelse(Private_cuft == "0", Total_cuft,
Total_cuft - Private_cuft)) )
EOSC_WR_Warehouse_cuftD2 <- EOSC_WR_Warehouse_cuft %>% filter(Total_cuft != "(D)") %>%  filter(Public_cuft == "(D)" | Private_cuft == "(D)") %>%
mutate(Total_cuft = as.double(Total_cuft),
Private_cuft = Total_cuft * Private_n / Total_n,
Public_cuft = Total_cuft - Private_cuft )
EOSC_WR_Warehouse_cuft <- EOSC_WR_Warehouse_cuft %>% filter(Total_cuft != "(D)" & Public_cuft != "(D)" & Private_cuft != "(D)" & State != "US TOTAL") %>%
mutate(Total_cuft = as.double(Total_cuft), Private_cuft = as.double(Private_cuft), Public_cuft = as.double(Public_cuft)) %>%
rbind(EOSC_WR_Warehouse_cuftD1) %>% rbind(EOSC_WR_Warehouse_cuftD2) %>%
mutate(stateName = str_to_title(State)) %>% select(-State)
#estimations of dry/cold storage relation from: https://www.cbre.us/research-and-reports/US-Food-in-Demand-Series-Cold-Storage-Logistics-Unpacked-May-2019
EOSC_WR_Warehouse_sqft <- EOSC_WR_Warehouse_cuft  %>% rowwise() %>% dplyr::mutate(
Public_sqft = (Public_cuft / EOSC_WR_warehouseHeight) /0.78 # USDA only collects ~78%., USDA only reports cold (not total capacity)
, Private_sqft = (Private_cuft / EOSC_WR_warehouseHeight) /0.78
, Public_sqft_cold = Public_sqft
, Public_sqft_dry = 0
, Private_sqft_cold = Private_sqft # should this be private x 0.35
, Private_sqft_dry = Private_sqft * .65/.35
, Cold = sum(c_across(c(Public_sqft_cold, Private_sqft_cold)), na.rm = TRUE)
, Dry = sum(c_across(c(Public_sqft_dry, Private_sqft_dry)), na.rm = TRUE)
)
EOSC_WR_Warehouse_sqft <- EOSC_WR_Warehouse_sqft %>% select(stateName, Cold, Dry) %>% pivot_longer(!stateName, names_to = "Type", values_to = "sqft")
EOSC_WR_WarehouseEnergy <- EOSC_WR_WarehouseEI %>% left_join(EOSC_WR_Warehouse_sqft, by = c("Type", "stateName")) %>% rowwise() %>% mutate(
Energy_TBTU = EI * sqft /1000000) %>% # EI was in MMBTU/sqft
select(stateName, Type, Fuel, Energy_TBTU)
EOSC_WR_Warehouse_TBTU <- aggregate(Energy_TBTU ~ Fuel + stateName + Type, EOSC_WR_WarehouseEnergy, FUN = sum, na.rm = TRUE) %>%
mutate(commodity_naics = paste("Warehouse -", Type)) %>% select(-Type)
EOSC_WR_Warehouse_TBTU$Fuel <-recode_factor(EOSC_WR_Warehouse_TBTU$Fuel,
"fuelOil" = "Petroleum"
, "naturalGas" = "Natural Gas"
, "Electricity" = "Grid Electricity")
EOSC_WR_Warehouse_TBTU <- EOSC_WR_Warehouse_TBTU %>% left_join(select(BD_stateRegion, stateName, State_Abb), by = "stateName")
EOSC_WR_Warehouse_TBTU$Stage <- "W&R"
# Retail & Consumption ----
EOSC_FS_fracs <-
EOSC_Commercial %>% filter(PBA == 15) %>% select(ELBTU, NGBTU, FKBTU) %>% summarise_all(sum, na.rm = TRUE) %>%
pivot_longer(everything(), names_to = "Fuel", values_to = "kBTU") %>%
mutate(frac = kBTU/sum(kBTU))
# AEO: https://www.eia.gov/outlooks/aeo/data/browser/#/?id=4-AEO2018&cases=ref2018&sourcekey=0
# UN: https://di.unfccc.int/detailed_data_by_party
EOSC_AEO_Retail_Electricity <- 331.596 #TBTU/yr #Food Sales
EOSC_AEO_FS_NG <- 584.817 * unlist(unname(EOSC_FS_fracs[2,3]))#TBTU/yr # Commercial NG for cooking
EOSC_AEO_FS_Electricity <- 584.817 * unlist(unname(EOSC_FS_fracs[1,3])) #TBTU/yr ( Food Service total energy - commercial cooking NG use)
EOSC_AEO_Res_Electricity <- 424.93#TBTU/yr #Residential Freezers + Refrigerator + Cooking (Electricity)
EOSC_AEO_Res_NG <- 103.04#TBTU/yr # Cooking NG
EOSC_AEO_Res_Pr <- 17.3#TBTU/yr # Cooking Propane
EOSC_UN_Commercial_Refrig_GHG <- 45.46 #MMT/yr
EOSC_UN_Residential_Refrig_GHG <- 1.28 #MMT/yr
EOSC_AEO_Com_Refridg <- 641.160 #TBTU/yr - Commercial Refrigeration
# Bureau of Economic Analysis Retail & Consumer used retail expenditures. Food Services used food service expenditures.
# https://apps.bea.gov/
EOSC_Expendatures <- read_excel("Data/End of Chain - Warehouse USDA-NASS, Retail + Consumption BEA.xlsx", sheet = "Food Expenditures"
, col_types = c("skip", "text", "skip", "text", "numeric"), skip = 4) %>%
filter(GeoName != "District of Columbia") %>% rename("stateName" = GeoName, "Expenditure" = `2016`)
EOSC_Expendatures <-EOSC_Expendatures %>%
mutate(Description = recode_factor(Description
, "Food and beverages purchased for off-premises consumption" = "retailExpendUSD2016"
, "Food services" = "FSExpendUSD2016")) %>%
pivot_wider(names_from = Description, values_from = Expenditure)
EOSC_sumFSExpendUSD2016 <- sum(EOSC_Expendatures$FSExpendUSD2016)
EOSC_sumRExpendUSD2016 <- sum(EOSC_Expendatures$retailExpendUSD2016)
# https://www.ers.usda.gov/data-products/food-at-home-monthly-area-prices/
EOSC_Expendatures_USDA <- read_excel("Data/Retail - FMAP.xlsx", sheet = "Data") %>%
filter(str_detect(Metroregion_name, "Census Region")) %>%
filter(Year == 2016)
EOSC_RegionalCost <-
EOSC_Expendatures_USDA%>%
group_by(Metroregion_name) %>%
summarise(retailPurchases = sum(Purchase_dollars_wtd),
retailWeight_gm = sum(Purchase_grams_wtd)) %>%
mutate(avgWeightperCost = retailWeight_gm/retailPurchases) %>%
separate(Metroregion_name, c("Metroregion_number", "Region_small"), sep = ":") %>%
mutate(Region_small = str_remove(Region_small, " ")) %>%
select(Region_small, avgWeightperCost)
EOSC_Expendatures <-
EOSC_Expendatures %>%
left_join(BD_stateRegion %>% select(stateName, Region_small), by = "stateName") %>%
left_join(EOSC_RegionalCost, by = "Region_small") %>%
ungroup()%>%
mutate(
retailExpendEstWt = retailExpendUSD2016 * avgWeightperCost
, FSExpendEstWt = FSExpendUSD2016 * avgWeightperCost
, fracFSExpend = FSExpendEstWt/sum(FSExpendEstWt)
, fracRExpend =  retailExpendEstWt/sum(retailExpendEstWt)
) %>%
rowwise() %>%
mutate(
Services_Electricity = EOSC_AEO_FS_Electricity * fracFSExpend #TBTU/yr * spent in state / total spent
, Services_NG = EOSC_AEO_FS_NG * fracFSExpend#TBTU/yr * spent in state / total spent
, Retail_Electricity = EOSC_AEO_Retail_Electricity * fracRExpend #TBTU/yr * spent in state / total spent
, Residential_Electricity = EOSC_AEO_Res_Electricity* fracRExpend#TBTU/yr * spent in state / total spent
, Residential_NG = EOSC_AEO_Res_NG* fracRExpend#TBTU/yr * spent in state / total spent
, Residential_PR = EOSC_AEO_Res_Pr* fracRExpend#TBTU/yr * spent in state / total spent
)
EOSC_TBTU <- EOSC_Expendatures %>% select(-FSExpendUSD2016, -retailExpendUSD2016, -fracFSExpend, -fracRExpend, -Region_small, -avgWeightperCost, -retailExpendEstWt, -FSExpendEstWt ) %>%
pivot_longer(!stateName, names_to = "naics_fuel", values_to = "Energy_TBTU")
EOSC_TBTU <- EOSC_TBTU %>% separate(naics_fuel, c("commodity_naics", "Fuel"), "_") %>% left_join(select(BD_stateRegion, State_Abb, stateName), by = "stateName") %>%
mutate(Stage = commodity_naics)
EOSC_TBTU$Stage <-recode_factor(EOSC_TBTU$Stage, "Retail" = "W&R", "Services" = "Consumption", "Residential" = "Consumption")
EOSC_TBTU$Fuel <-recode_factor(EOSC_TBTU$Fuel, "NG" = "Natural Gas", "PR" = "Petroleum" ,"Electricity" = "Grid Electricity")
F_EOSC_TBTU <- rbind(EOSC_TBTU, EOSC_WR_Warehouse_TBTU)
F_EOSC_TBTU <- F_EOSC_TBTU %>% dplyr::mutate(
Source =  ifelse(Fuel == "Grid Electricity", "Grid Electricity", "Fuel")
)
# end of chain source electricity ----
EOSC_SourceE <- F_EOSC_TBTU %>% filter(Fuel == "Grid Electricity") %>% select(State_Abb, Energy_TBTU, commodity_naics) %>%
left_join(select(GEN_state2016, State_Abb, Source, percent, heatRate, tdLossFactor), by = "State_Abb") %>%
dplyr::mutate(endSourceEnergy_TBTU = percent * Energy_TBTU * heatRate * tdLossFactor/3412.14) # convert heatRate to dimensionless --> heatRate/3412.14
# spread out so each fuel type is a column
EOSC_SourceE <- EOSC_SourceE %>% select(State_Abb, Source,endSourceEnergy_TBTU, commodity_naics) %>%
pivot_wider(names_from = Source, values_from = endSourceEnergy_TBTU)
#sum columns together to match classifications, remove unnecessary rows
EOSC_SourceE <- EOSC_SourceE %>% rowwise() %>%
dplyr::mutate(OtherSources = sum(c_across(c(Nuclear, Other,"Other Gases")),na.rm = TRUE)
, Renewables = sum(c_across(c("Geothermal", "Hydroelectric Conventional", "Other Biomass" , "Wind", "Wood and Wood Derived Fuels" ,  "Solar Thermal and Photovoltaic", "Pumped Storage")),na.rm = TRUE)) %>%
select(-Nuclear, -Other, -"Other Gases",-"Geothermal", -"Hydroelectric Conventional", -"Other Biomass", -"Wind", -"Wood and Wood Derived Fuels", -"Solar Thermal and Photovoltaic", -"Pumped Storage")
EOSC_SourceE <- EOSC_SourceE %>% dplyr::rename("Other" = OtherSources)
EOSC_SourceE <- EOSC_SourceE %>% pivot_longer(!c(commodity_naics, State_Abb), names_to = "Fuel", values_to = "Energy_TBTU") %>%
dplyr::mutate(Source = "Grid Electricity", Stage = commodity_naics) %>% left_join(select(BD_stateRegion, State_Abb, stateName), by = "State_Abb")
EOSC_SourceE$Stage <-recode_factor(EOSC_SourceE$Stage, "Warehouse - Cold" = "W&R", "Warehouse - Dry" = "W&R","Retail" = "W&R", "Services" = "Consumption", "Residential" = "Consumption")
# end of chain combine source energy ----
F_EOSC_SourceTBTU <- F_EOSC_TBTU %>% filter(Fuel != "Grid Electricity")
F_EOSC_SourceTBTU$Source <- "Fuel"
F_EOSC_SourceTBTU <- F_EOSC_SourceTBTU %>% rbind(EOSC_SourceE)
# end of chain GHG ----
#Electricity GHG
EOSC_electricityGHG <- F_EOSC_TBTU %>% filter(Fuel == "Grid Electricity") %>% select(State_Abb, Energy_TBTU, commodity_naics) %>%
left_join(select(GEN_state2016GHG, State_Abb, Source, percent, CO2e_MMT_TBTU, tdLossFactor), by = "State_Abb") %>%
dplyr::mutate(eocElectricityGHG =percent * Energy_TBTU * CO2e_MMT_TBTU * tdLossFactor )
EOSC_electricityGHG <- EOSC_electricityGHG %>% select(commodity_naics, State_Abb, Source,eocElectricityGHG) %>%
pivot_wider(names_from = Source, values_from = eocElectricityGHG)
EOSC_electricityGHG <- EOSC_electricityGHG %>% rowwise() %>%
dplyr::mutate(OtherSources = sum(c_across(c( Other,"Other Gases")),na.rm = TRUE)
, Renewables = sum(c_across(c("Geothermal", "Other Biomass" , "Wood and Wood Derived Fuels" )),na.rm = TRUE)) %>%
select( -Other, -"Other Gases",-"Geothermal",-"Other Biomass", -"Wood and Wood Derived Fuels") %>% dplyr::rename("Other" = "OtherSources")
EOSC_electricityGHG <- EOSC_electricityGHG %>% pivot_longer(!c(commodity_naics, State_Abb), names_to = "Fuel", values_to = "GHG_MMT")
EOSC_electricityGHG$Source <- "Grid Electricity"
EOSC_electricityGHG <- EOSC_electricityGHG %>% left_join(select(BD_stateRegion, stateName, State_Abb), by = "State_Abb")
EOSC__fuelsGHG <- data.frame(
Fuel = c("Natural Gas","Propane", "Petroleum" )
, GHG_kgCO2e_MMBTU = c(53.06 + 25*1/1000 + 298 * 0.1/1000 , 62.87 + 25*3/1000 + 298 * 0.6/1000, mean(73.25, 73.96, 75.04) + 25*3/1000 + 298 * 0.6/1000 )
)
EOSC_FuelGHG <- F_EOSC_TBTU %>% filter(Fuel != "Grid Electricity") %>% select(State_Abb, Energy_TBTU, commodity_naics, Fuel)  %>%
left_join(EOSC__fuelsGHG, by = "Fuel") %>% rowwise() %>%
dplyr::mutate(GHG_MMT = Energy_TBTU * GHG_kgCO2e_MMBTU/1000) %>% # 1000000 MMBTU/TBTU * MMT/1000000000
select(-Energy_TBTU, -GHG_kgCO2e_MMBTU)
EOSC_FuelGHG$Source <- "Fuel"
EOSC_FuelGHG <-EOSC_FuelGHG %>% left_join(select(BD_stateRegion, stateName, State_Abb), by = "State_Abb")
# Commercial Fug GHG
# EOSC_UN_Commercial_Refrig_GHG <- 45.46 #MMT/yr
# EOSC_AEO_Com_Refridg <- 641.160 #TBTU/yr - Commercial Refrigeration
EOSC_Commercial_FugGHG <-
EOSC_Commercial %>% filter(PBAPLUS %in% c(10, 14, 15, 20, 32, 33, 34)) %>%
mutate(commodity_naics = recode_factor(PBAPLUS,
"10" = "Warehouse - Dry"
,"14" = "Retail"
, "15" = "Retail"
, "20" = "Warehouse - Cold"
, "32" = "Services"
, "33" = "Services"
, "34" = "Services"))%>%
group_by(commodity_naics, CENDIV) %>%
summarise(ELMMBTU = sum(ELBTU, na.rm = TRUE)/1000
, RefMMBTU = sum(ELRFBTU, na.rm = TRUE)/1000
,fracFridge = RefMMBTU/ELMMBTU) %>%
rename("Region" = CENDIV) %>%
left_join(select(BD_stateRegion, stateName, Region), by = "Region") %>%
#^ use CBECS to find the average fraction of refrigeration for commercial food electricity
# V apply fraction to known commercial food electricity use to find commercial food refrigeration energy for each state
select(commodity_naics, fracFridge, stateName) %>% ungroup() %>%
# only need Grid Electricity Energy and Commercial
right_join(filter(F_EOSC_TBTU,Fuel == "Grid Electricity" & commodity_naics != "Residential"), by = c("commodity_naics", "stateName")) %>%
mutate(GHG_MMT = fracFridge * Energy_TBTU * EOSC_UN_Commercial_Refrig_GHG/ EOSC_AEO_Com_Refridg
#fracFridge * Energy_TBTU = portion of group's energy used for refrigeration,
# then multiple by total commercial refrigeration GHG/Energy
# Assumes that everything has about the same fugitive emissions / electricity use.
, Fuel = "Refrigerant"
, Source = "Refrigerant"
) %>%
select(-fracFridge, -Energy_TBTU)
EOSC_Residential_FugGHG <- EOSC_Expendatures %>% rowwise() %>%
mutate(GHG_MMT = EOSC_UN_Residential_Refrig_GHG * fracRExpend) %>%
select(stateName, GHG_MMT) %>%
mutate(Fuel = "Refrigerant", Stage = "Consumption", commodity_naics = "Residential", Source = "Refrigerant") %>%
left_join(select(BD_stateRegion, State_Abb, stateName), by = "stateName")
F_EOSC_GHG <- rbind(EOSC_electricityGHG, EOSC_FuelGHG)
F_EOSC_GHG <- F_EOSC_GHG %>% dplyr::mutate(Stage = commodity_naics)
F_EOSC_GHG$Stage <-recode_factor(F_EOSC_GHG$Stage, "Warehouse - Dry" = "W&R", "Warehouse - Cold" = "W&R"
,"Retail" = "W&R", "Services" = "Consumption", "Residential" = "Consumption")
F_EOSC_GHG <- rbind(F_EOSC_GHG, EOSC_Commercial_FugGHG, EOSC_Residential_FugGHG)
}
# Remove excess variables from environment
rm(list=ls(pattern="^EOSC"))
# Combine Stages ----
{
allSiteTBTU <- rbind(F_FARM_SiteTBTU %>% mutate(Stage = "On-farm", subStage = Source),
rbind(
F_MANUF_SiteTBTU %>% mutate(Stage = "Manufacturing", subStage = Source),
F_DIST_TBTU %>% mutate(subStage =  recode_factor(Stage, "Distribution (F-M)" = "F-M Dist.", "Distribution" = "Distribution")),
F_EOSC_TBTU %>% mutate(subStage = commodity_naics) ) %>%
mutate( directUse_yn = ifelse(Source == "Fuel" | Source == "On-site Renewables", T, F)
, electricity_yn = ifelse(Source == "Grid Electricity", T, F)
, primarySource = Fuel
)
)%>%     mutate(Analysis = "Site Energy (TBTU)")%>% dplyr::rename("Value" = Energy_TBTU)
allSourceTBTU <- rbind(F_FARM_SourceTBTU %>% mutate(Stage = "On-farm", subStage = Source),
rbind(
F_MANUF_SourceTBTU %>% mutate(Stage = "Manufacturing", subStage = Source, primarySource = Fuel),
F_DIST_TBTU %>% mutate(subStage =  recode_factor(Stage, "Distribution (F-M)" = "F-M Dist.", "Distribution" = "Distribution"), primarySource = Fuel),
F_EOSC_SourceTBTU %>% mutate(subStage = commodity_naics, primarySource = Fuel) ) %>%
mutate( directUse_yn = ifelse(Source == "Fuel" | Source == "On-site Renewables", T, F)
, electricity_yn = ifelse(Source == "Grid Electricity", T, F)
, primarySource = Fuel
))%>%
mutate(Analysis = "Primary Energy (TBTU)")%>% dplyr::rename("Value" = Energy_TBTU)
allGHGMMT <- rbind(F_FARM_GHG %>% mutate(Stage = "On-farm", subStage = Source),
rbind(
F_MANUF_GHG %>% mutate(Stage = "Manufacturing", subStage = Source, primarySource = Fuel),
F_DIST_GHG %>% mutate(subStage =  recode_factor(Stage, "Distribution (F-M)" = "F-M Dist.", "Distribution" = "Distribution"), primarySource = Fuel),
F_EOSC_GHG %>% mutate(subStage = commodity_naics, primarySource = Fuel)) %>%
mutate( directUse_yn = ifelse(Source == "Fuel" | Source == "On-site Renewables", T, F)
, electricity_yn = ifelse(Source == "Grid Electricity", T, F)
, primarySource = Fuel
) )%>%   mutate(Analysis = "GHG Emissions (MMT CO2e)") %>% dplyr::rename("Value" = GHG_MMT)
# combine all data with Farm distribution as own stage
allData <-
rbind(allSiteTBTU, allSourceTBTU, allGHGMMT) %>%
mutate(Fuel = recode_factor(Fuel,  "Diesel" ="Petroleum"  , "Gasoline"="Petroleum"  , "LP Gas"="Petroleum"  ),
primarySource = recode_factor(primarySource, "Electricity" = "Grid Electricity")) %>%
group_by(commodity_naics ,State_Abb ,stateName  , Source , Fuel ,  primarySource ,  Stage,subStage, directUse_yn, electricity_yn  ,      Analysis) %>%
summarise(Value = sum(Value, na.rm = T)) %>%
mutate(
Fuel = factor(Fuel, levels = LEVELS_fuel),
Source = factor(Source, levels = LEVELS_source),
Stage = factor(Stage , levels = c("On-farm", "Distribution (F-M)", "Manufacturing", "Distribution", "W&R", "Consumption"))) %>%
rowwise() %>%
dplyr::mutate(
Value = ifelse(
commodity_naics == "Animal Feed" | commodity_naics == "Animal Feed Processing",
Value * BD_percentNotPet, Value    )  ) %>%
mutate(
Stage_x = recode_factor(Stage ,  "Distribution (F-M)" = "\nDistribution (F-M)", "Distribution" = "\nDistribution"),
Stage_x = factor(Stage_x , levels = c("On-farm", "\nDistribution (F-M)", "Manufacturing", "\nDistribution", "W&R", "Consumption")),
Stage_y = recode_factor(Stage ,  "Distribution (F-M)" = "On-farm"),
Stage_y = factor(Stage_y , levels = c("On-farm", "Manufacturing", "Distribution", "W&R", "Consumption")),
)
# move farm distribution & Animal feed to "on-farm"
BD_animalFeedBreakdown <- data.frame( commodity_naics_z = c("Meat, Poultry, Eggs", "Dairy"), feedFrac = c(BD_percentFeednotDairyinNotPet, BD_percentFeedDairyCowinNotPet))
allData_finalAF <-
allData %>% filter(commodity_naics == "Animal Feed" | commodity_naics == "Animal Feed Processing") %>%
merge(BD_animalFeedBreakdown) %>%
rowwise() %>% dplyr::mutate(
Value = Value * feedFrac,
Stage_z = "On-farm"
, Fuel_z = #ifelse(Analysis == "Site Energy (TBTU)",
ifelse(commodity_naics == "Animal Feed Processing", "AF Manuf."
, ifelse(commodity_naics == "Animal Feed" & Stage_y == "Distribution", "AF Manuf.", "AF Growth"))
# , "AF Growth" )#Why was this Fuel not AF Growth? as.character(Fuel))
, Source_z = #ifelse(commodity_naics == "Animal Feed Processing",
switch(as.character(Source),
"Fuel" = "AF Fuel",
"Grid Electricity" = "AF Electricity",
"On-site Renewables" = "AF Renewables",
"Renewables" = "AF Renewables",
"Refrigerant" = "AF Refrig.",
"Fertilizer Manuf."  = "AF Chemicals",
"Pesticide Manuf."= "AF Chemicals",
"Truck" = "AF Transport",
"Rail" = "AF Transport",
"Crop Emissions" = "AF Crop Emissions")
) %>% select(-feedFrac) %>%
mutate(FP_yn = ifelse(Source == "Fertilizer Manuf."|Source == "Pesticide Manuf." , T, F),
AF_yn = T,
directUse_yn = F
)
allData_final <- filter(allData, commodity_naics != "Animal Feed" & commodity_naics != "Animal Feed Processing") %>%
mutate(commodity_naics_z = commodity_naics, Stage_z = as.character(Stage_y), Fuel_z = as.character(Fuel)
, Source_z = as.character(Source) #, subStage_z = subStage
, FP_yn = ifelse(Source == "Fertilizer Manuf."| Source == "Pesticide Manuf." | Source == "AF Chemicals", T, F)
, AF_yn = F
) %>%     rbind(allData_finalAF) %>% ungroup() %>%
mutate(primarySource = factor(primarySource, levels = LEVELS_fuel),
commodity_naicsF = addline_format(factor(commodity_naics), levels = LEVELS_naicsLine),
commodity_naicsF_z = addline_format(factor(commodity_naics_z), levels = LEVELS_naicsLine)
) %>%
select(Analysis,Stage_z, commodity_naics_z, commodity_naicsF_z, Fuel_z, primarySource, subStage,
Source_z,  State_Abb, stateName, FP_yn, AF_yn, Value, directUse_yn, electricity_yn) %>%
dplyr::rename(Stage = Stage_z
, commodity_naics = commodity_naics_z, commodity_naicsF = commodity_naicsF_z
, Fuel = Fuel_z, Source = Source_z, subSource = subStage) %>%
mutate(
Stage = factor( Stage , levels = c("On-farm", "Distribution (F-M)","Manufacturing",  "Distribution", "W&R", "Consumption"))
, Fuel_red = recode_factor(Fuel, "F&P Electricity"= "Chemical Manuf.", "F&P Fuel" = "Chemical Manuf."
,"AF Manuf." = "Animal Feed", "AF Growth" = "Animal Feed", "Other" = "Other Fuel")
, sourceGroup = recode_factor(Source,
"F&P Electricity" = "Grid Electricity",
"F&P Fuel" = "Fuel",
"F&P Process" = "Process/Refrig.",
"On-site Renewables" = "Renewables",
"Refrigerant" = "Process/Refrig.",
"Truck" = "Fuel",   "Rail" = "Fuel",
"Truck Refrig." = "Process/Refrig.", "Rail Refrig." = "Process/Refrig.",
"AF Fuel" = "Fuel", "AF Renewables" = "Renewables", "AF Electricity" = "Grid Electricity", "AF Transport" = "Fuel",
"AF Refrig." = "Process/Refrig.", "AF Crop Emissions" = "Crop Emissions"  ,
"AF F&P Fuel" = "Fuel", "AF F&P Electricity" = "Grid Electricity" )
, sourceGroup = ifelse(primarySource != "Process", ifelse(Source == "Pesticide Manuf." | Source == "Fertilizer Manuf.",
ifelse(Fuel == "F&P Electricity", "Grid Electricity", "Fuel"), as.character(sourceGroup)), as.character(sourceGroup) )
, sourceGroup = ifelse(Source == "AF Chemicals", ifelse(primarySource == "Grid Electricity", "Grid Electricity", "Fuel"), as.character(sourceGroup))
, sourceLocation = recode_factor(Source,
"Fuel" = "Site", "Grid Electricity" = "Site", "On-site Renewables" = "Site",
"Animal Emissions" = "Site", "Crop Emissions" = "Site","Refrigerant" = "Site",
"F&P Electricity" = "Chemical Manuf.", "F&P Fuel" = "Chemical Manuf.",
"Truck" = "Transport", "Rail" = "Transport","Truck Refrig." = "Transport", "Rail Refrig." = "Transport",
"AF Fuel" = "Animal Feed", "AF Renewables" = "Animal Feed", "AF Electricity" = "Animal Feed",
"AF Refrig." = "Animal Feed", "AF Transport" = "Animal Feed", "AF Crop Emissions" = "Animal Feed",
"AF F&P Fuel" = "Animal Feed", "AF F&P Electricity" = "Animal Feed"  )
, sourceLocation = ifelse(Source == "Pesticide Manuf." | Source == "Fertilizer Manuf.",
"Chemicals", as.character(sourceLocation))
, sourceLocation = ifelse(Source == "AF Chemicals", "Animal Feed", as.character(sourceLocation))
, Fuel = recode_factor(Fuel, "Other" = "Other Fuel")
, primarySource = recode_factor(primarySource, "Other" = "Other Fuel")
, transport_yn = ifelse(sourceLocation == "Transport" | str_detect(Source, "Transport"), T, F)
, nonEnergyEmissions_yn = ifelse(str_detect(Source, "Emissions") | str_detect(Source, "Refrig") | str_detect(primarySource, "Process"), T, F)
)
remove("allData_finalAF")
allDataSummary <- aggregate(Value ~ Analysis+Stage_y,allData, FUN = sum) %>% pivot_wider(names_from = Analysis, values_from = Value)
allData_finalSummary <- aggregate(Value ~ Analysis+Stage,allData_final, FUN = sum) %>% pivot_wider(names_from = Analysis, values_from = Value)
}
# Extreme Summary ----
allData_final %>%
dplyr::mutate(groupA = recode_factor( sourceGroup,"Grid Electricity" = "Energy", "Fuel" = "Energy", "Renewables" = "Energy",
"Animal Emissions" = "Animal/Crop Emissions", "Crop Emissions" = "Animal/Crop Emissions"),
group = ifelse(groupA == "Energy", as.character(sourceLocation), as.character(groupA) ) ) %>%
group_by(Analysis, Stage, group) %>%
dplyr::summarise(Value = sum(Value, na.rm = TRUE)) %>%
dplyr::mutate(Value = signif(Value, digits = 3)) %>%
pivot_wider(names_from = Stage, values_from = Value ) %>%
arrange(Analysis)
#TOTALS
allData_final %>% group_by(Analysis) %>% summarise(Values = sum(Value, na.rm = TRUE)) %>%
dplyr::mutate(Values = signif(Values, 4)) %>%
dplyr::mutate(PJ = Values * ifelse(Analysis == "GHG Emissions (MMT CO2e)", 1, 1.05506))
pivot_wider(names_from = Analysis, values_from = Values) %>%
select(`Site Energy (TBTU)`, `Primary Energy (TBTU)`, `GHG Emissions (MMT CO2e)`) #%>% write_clip()
#STAGE TOTALS
allData_final %>% group_by(Analysis, Stage) %>% summarise(Values = sum(Value, na.rm = TRUE)) %>%
mutate(perc = signif(Values/sum(Values),2), Values = signif(Values, 4)) %>%
pivot_longer(c(perc, Values),names_to = "name1", values_to = "values") %>% ungroup() %>%
mutate(name2 = paste(Analysis, " ", name1)) %>% select(-Analysis, -name1) %>%
pivot_wider(names_from = name2, values_from = values)  %>%
mutate(`Site Energy perc` = percent(`Site Energy (TBTU)   perc`, accuracy = .1),
`Primary Energy perc`= percent(`Primary Energy (TBTU)   perc`, accuracy = .1),
`GHG Emissions perc`= percent(`GHG Emissions (MMT CO2e)   perc`, accuracy = .1) )%>%
select(Stage, `Site Energy (TBTU)   Values`  , `Site Energy perc`,`Primary Energy (TBTU)   Values` ,
`Primary Energy perc` , `GHG Emissions (MMT CO2e)   Values`, `GHG Emissions perc` ) %>% view()
siteBar <-
allData_final %>%
filter( Analysis == "Site Energy (TBTU)") %>%
group_by(Stage, Fuel_red) %>%
summarise(Value = sum(Value, na.rm = T)) %>%
mutate(Fuel_red = factor(Fuel_red, levels = LEVELS_fuel_red)) %>%
ggplot()+
geom_col(aes(x = Stage, y = Value, fill = Fuel_red), color = "black") +
scale_fill_manual(values = pivot_wider(filter(pivot_longer(COLOR_fuel_alt, everything(), names_to = "Fuel", values_to = "Color" )
, Fuel %in% as.character(unique(filter(allData_final, Analysis == "Site Energy (TBTU)")$Fuel_red)))
, names_from = Fuel, values_from = Color))+
labs(x = "", y = "Site Energy (TBTU)", fill = "Energy Sources")+
guides(fill = guide_legend(nrow = 4))+
THEME_simple +    theme(
legend.text = element_text(size = 10) , axis.text = element_text(size = (11))
, axis.title = element_text(size = (12)), legend.key.size = unit(0.8,"line")
, panel.grid.major = element_blank(), panel.grid.minor = element_blank()
, legend.background = element_blank()
, legend.box.background = element_rect(colour = "black")
, legend.box.margin=margin(-5,0,0,0)
, legend.position = c(.6,.8 )
)#, legend.title = element_blank())
siteBar
